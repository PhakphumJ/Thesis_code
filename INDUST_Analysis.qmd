---
title: "Thesis_INDUS_Analysis"
format: html
execute:
  warning: false
---
## Explanation

In this document/code, I will examine key dimensions of manafacturing firms. The main goal is to see whether there are differences in key dimensions across different regions. The main characteristics that I will examine are:

1. Firm size (Number of workers)
  i) 2550: (A24 + A28)
  ii) 2555: (A20 + A24)
  iii) 2560: (B04 + B08)
  iv) 2565: (B04 + B08)
2. Foreign Investment
  i) 2550: A09
  ii) 2555: A09
  iii) 2560: A09
  iv) 2565: A09
3. Sales
  i) 2550: G01
  ii) 2555: G01
  iii) 2560: D01
  iv) 2565: D01
4. Total Fixed Assets (Beginning of the year)
  i) 2550: H08
  ii) 2555: H05
  iii) 2560: E08
  iv) 2565: E08
5. R&D Costs
  i) 2550: E28
  ii) 2555: F09
  iii) 2560: C32
  iv) 2565: C29
6. Number of firms
  i) 2550: sum of weights
  ii) 2555: sum of weights
  iii) 2560: sum of weights
  iv) 2565: sum of weights
7. Estimated TFP (estimated using sales, wage bill, and fixed assets).
8. Value-added/worker: Value added is calculated as sales - cost of raw materials + change in inventory of raw materials.
  i) 2550: (G01 + (D05 - D01) - C01)/(A24 + A28)
  ii) 2555: (G01 + (D05 - D01) - C01)/(A20 + A24)
  iii) 2560: (D01 + (C12 – C07) – C01)/(B04 + B08)
  iv) 2565: (D01 + (C12 – C07) – C01)/(B04 + B08)
9. K/L
  i) 2550: H08/(A24 + A28)
  ii) 2555: H05/(A20 + A24)
  iii) 2560: E08/(B04 + B08)
  iv) 2565: E08/(B04 + B08)
10. Sales per worker
  i) 2550: G01/num_employ
  ii) 2555: G01/num_employ
  iii) 2560: D01/num_employ
  iv) 2565: D01/num_employ

Before analysing, I will trim the data by removing firms with sales lower than 6,000, fixed assets lower than 10,000, firms with zero workers. 

I also remove firms with top and bottom 1% of value-added per worker or top and bottom 1% of K/L.

Moreover, we remove obseravations detected to be duplicates based on seven variables: (i) years in operation,
(ii) total employment, (iii) wage compensation, (iv) raw materials, (v) initial raw material stocks,
(vi) initial finished product stocks, and (vii) initial fixed assets

## Import and Clean Data
```{r}
remove(list = ls())

library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)
library(haven)
library(ggstats)
library(lemon)
library(kableExtra)
library(mmtable2)
library(stringr)
library(purrr)
library(gt)
library(patchwork)
library(cNORM)
library(hutils)

# Set working directory
setwd("D:/Onedrive-CEU/OneDrive - Central European University/CEU/Thesis/Thesis_code")

# Importing the data

INDUS_2550 <- read_sav("Data\\INDUS 2550 (2007)\\Microdata INDUS 2550\\Microdata INDUS 2550.sav")

INDUS_2555 <- read_sav("Data\\BIC 2555 (2012)\\BICINDUS 2555 (2012)\\Microdata BICINDUS 2555\\Microdata BICINDUS 2555.sav")

INDUS_2560 <- read_sav("Data\\INDUS 2560 (2018)\\Microdata INDUS 2560\\Microdata INDUS 2560.sav")

INDUS_2565 <- read_sav("Data\\BIC 2565 (2022)\\BICINDUS 2565 (2022)\\Microdata BICINDUS 2565\\Microdata BICINDUS 2565_N.sav")

LFS_LF <- read_excel("Data/Output/All_YEAR_TOTAL_LF_annual_final.xlsx")


```

# Analysis of all firms

## Pre-processing the data
### Divide weight by 10,000
```{r}
INDUS_2550 <- INDUS_2550 %>% mutate(WGT_CWT = WGT_CWT/10000, WGT_REG = WGT_REG/10000)

```

```{r}
### Remove those with zero weight
INDUS_2550 <- INDUS_2550 %>% filter(WGT_REG > 0)

INDUS_2555 <- INDUS_2555 %>% filter(WGT17 > 0)

INDUS_2560 <- INDUS_2560 %>% filter(WGT > 0)

INDUS_2565 <- INDUS_2565 %>% filter(WGT > 0)
```


### Removing firms with sales < 12,000, fixed assets < 6,000.

```{r}
## 2550
# Drop firms with missing values in sales and fixed assets.
INDUS_2550 <- INDUS_2550 %>% filter(!is.na(G01), !is.na(H08))

# Drop firms with sales < 12,000 and fixed assets < 6,000.
INDUS_2550 <- INDUS_2550 %>% filter(G01 >= 12000, H08 >= 6000)

## 2555
# Drop firms with missing values in sales and fixed assets.
INDUS_2555 <- INDUS_2555 %>% filter(!is.na(G01), !is.na(H05))

# Drop firms with sales < 12,000 and fixed assets < 6,000.
INDUS_2555 <- INDUS_2555 %>% filter(G01 >= 12000, H05 >= 6000)

## 2560
# Drop firms with missing values in sales and fixed assets.
INDUS_2560 <- INDUS_2560 %>% filter(!is.na(D01), !is.na(E08))

# Drop firms with sales < 12,000 and fixed assets < 6,000.
INDUS_2560 <- INDUS_2560 %>% filter(D01 >= 12000, E08 >= 6000)

## 2565
# Drop firms with missing values in sales and fixed assets.
INDUS_2565 <- INDUS_2565 %>% filter(!is.na(D01), !is.na(E08))

# Drop firms with sales < 12,000 and fixed assets < 6,000.
INDUS_2565 <- INDUS_2565 %>% filter(D01 >= 12000, E08 >= 6000)



```


## Calculate the number of workers

```{r}
## Calculate the number of workers
# 2550
# Replace NA with 0 in A24 and A28
INDUS_2550 <- INDUS_2550 %>% mutate(A24 = ifelse(is.na(A24), 0, A24), A28 = ifelse(is.na(A28), 0, A28))

INDUS_2550 <- INDUS_2550 %>% mutate(num_employ = A24 + A28)

# 2555
INDUS_2555 <- INDUS_2555 %>% mutate(A20 = ifelse(is.na(A20), 0, A20), A24 = ifelse(is.na(A24), 0, A24))

INDUS_2555 <- INDUS_2555 %>% mutate(num_employ = A20 + A24)

# 2560
INDUS_2560 <- INDUS_2560 %>% mutate(B04 = ifelse(is.na(B04), 0, B04), B08 = ifelse(is.na(B08), 0, B08))

INDUS_2560 <- INDUS_2560 %>% mutate(num_employ = B04 + B08)

# 2565
INDUS_2565 <- INDUS_2565 %>% mutate(B04 = ifelse(is.na(B04), 0, B04), B08 = ifelse(is.na(B08), 0, B08))

INDUS_2565 <- INDUS_2565 %>% mutate(num_employ = B04 + B08)

```

```{r}
## Let's examine SIZE_R, B04, and B08 of 2560
INDUS_2560 %>% select(SIZE_R, B04, B08)

## That's certainly weird. 
```

```{r}
## Remove obs. with num_employ = 0
INDUS_2550 <- INDUS_2550 %>% filter(num_employ > 0)
INDUS_2555 <- INDUS_2555 %>% filter(num_employ > 0)
INDUS_2560 <- INDUS_2560 %>% filter(num_employ > 0)
INDUS_2565 <- INDUS_2565 %>% filter(num_employ > 0)
```


```{r}
### See if there's absurdly high number of workers
INDUS_2550 %>% filter(num_employ > 2500) %>% select(num_employ, WGT_REG, SIZE_R)
```

```{r}
INDUS_2565 %>% filter(num_employ > 5000) %>% select(num_employ, WGT, SIZE_R)
```



## Detect duplicates

We will use the following variables to detect duplicates: (i) years in operation, (ii) total employment, (iii) wage compensation, (iv) raw materials, (v) initial raw material stocks, (vi) initial finished product stocks, and (vii) initial fixed assets.

```{r}
## 2550
# shuffle the data first.
INDUS_2550 <- INDUS_2550[sample(1:nrow(INDUS_2550)),]

INDUS_2550 <- INDUS_2550 %>% distinct(A04, num_employ, B05, C01 ,D01, D03, H08, .keep_all = TRUE)


## 2555
# shuffle the data first.
INDUS_2555 <- INDUS_2555[sample(1:nrow(INDUS_2555)),]

INDUS_2555 <- INDUS_2555 %>% distinct(A04, num_employ, B07, C01 ,D01, D03, H05, .keep_all = TRUE)


## 2560
# shuffle the data first.
INDUS_2560 <- INDUS_2560[sample(1:nrow(INDUS_2560)),]

INDUS_2560 <- INDUS_2560 %>% distinct(A04, num_employ, B19, C01 ,C07, C09, E08, .keep_all = TRUE)


## 2565
# shuffle the data first.
INDUS_2565 <- INDUS_2565[sample(1:nrow(INDUS_2565)),]

INDUS_2565 <- INDUS_2565 %>% distinct(A04, num_employ, B19, C01 ,C07, C09, E08, .keep_all = TRUE)
```



## Calculate value-added per worker

```{r}
## Using only firms with sales > 12.000
# 2550. (G01 + (D05 - D01) - C01)/num_employ
INDUS_2550 <- INDUS_2550 %>% filter(G01 > 12000, !is.na(G01), !is.na(D05), !is.na(D01), !is.na(C01))
# Calculate value-added.
INDUS_2550 <- INDUS_2550 %>% mutate(Value_Added = (G01 + (D05 - D01) - C01))
# Calculate value-added per worker.
INDUS_2550 <- INDUS_2550 %>% mutate(Value_Added_per_emp = Value_Added/num_employ)


# 2555. (G01 + (D05 - D01) - C01)/num_employ
INDUS_2555 <- INDUS_2555 %>% filter(G01 > 12000, !is.na(G01), !is.na(D05), !is.na(D01), !is.na(C01))
# Calculate value-added.
INDUS_2555 <- INDUS_2555 %>% mutate(Value_Added = (G01 + (D05 - D01) - C01))
# Calculate value-added per worker.
INDUS_2555 <- INDUS_2555 %>% mutate(Value_Added_per_emp = Value_Added/num_employ)


# 2560. (D01 + (C12 – C07) – C01)/num_employ
INDUS_2560 <- INDUS_2560 %>% filter(D01 > 12000, !is.na(D01), !is.na(C12), !is.na(C07), !is.na(C01))
# Calculate value-added.
INDUS_2560 <- INDUS_2560 %>% mutate(Value_Added = (D01 + (C12 - C07) - C01))
# Calculate value-added per worker.
INDUS_2560 <- INDUS_2560 %>% mutate(Value_Added_per_emp = Value_Added/num_employ)


# 2565. (D01 + (C12 – C07) – C01)/num_employ
INDUS_2565 <- INDUS_2565 %>% filter(D01 > 12000, !is.na(D01), !is.na(C12), !is.na(C07), !is.na(C01))
# Calculate value-added.
INDUS_2565 <- INDUS_2565 %>% mutate(Value_Added = (D01 + (C12 - C07) - C01))
# Calculate value-added per worker.
INDUS_2565 <- INDUS_2565 %>% mutate(Value_Added_per_emp = Value_Added/num_employ)
```


## Calculate K/L

```{r}
## 2550. H08/num_employ
# Calculate K/L
INDUS_2550 <- INDUS_2550 %>% mutate(Capital_to_Labor = H08/num_employ)


## 2555. H05/num_employ
# Calculate K/L
INDUS_2555 <- INDUS_2555 %>% mutate(Capital_to_Labor = H05/num_employ)


## 2560. E08/num_employ
# Calculate K/L
INDUS_2560 <- INDUS_2560 %>% mutate(Capital_to_Labor = E08/num_employ)


## 2565. E08/num_employ
# Calculate K/L
INDUS_2565 <- INDUS_2565 %>% mutate(Capital_to_Labor = E08/num_employ)

```


## Categorize R&D expense whether it is zero or not.


```{r}
## Using only firms with sales > 12.000. Hance, use the same firms as in the value-added per worker.

# 2550.
# If E28 is NA, then replace it with 0.
INDUS_2550 <- INDUS_2550 %>% mutate(E028 = ifelse(is.na(E028), 0, E028))

# Categorize R&D expense
INDUS_2550 <- INDUS_2550 %>% mutate(RD_above_0 = ifelse(E028 > 0, 1, 0))


# 2555.
# If F09 is NA, then replace it with 0.
INDUS_2555 <- INDUS_2555 %>% mutate(F09 = ifelse(is.na(F09), 0, F09))

# Categorize R&D expense
INDUS_2555 <- INDUS_2555 %>% mutate(RD_above_0 = ifelse(F09 > 0, 1, 0))


# 2560.
# If C32 is NA, then replace it with 0.
INDUS_2560 <- INDUS_2560 %>% mutate(C32 = ifelse(is.na(C32), 0, C32))

# Categorize R&D expense
INDUS_2560 <- INDUS_2560 %>% mutate(RD_above_0 = ifelse(C32 > 0, 1, 0))


# 2565.
# If C29 is NA, then replace it with 0.
INDUS_2565 <- INDUS_2565 %>% mutate(C29 = ifelse(is.na(C29), 0, C29))

# Categorize R&D expense
INDUS_2565 <- INDUS_2565 %>% mutate(RD_above_0 = ifelse(C29 > 0, 1, 0))


```

## Calculate sales per worker

```{r}
### Calculate sales per worker
# 2550. G01/num_employ
INDUS_2550 <- INDUS_2550 %>% mutate(Sales_per_emp = G01/num_employ)

# 2555. G01/num_employ
INDUS_2555 <- INDUS_2555 %>% mutate(Sales_per_emp = G01/num_employ)

# 2560. D01/num_employ
INDUS_2560 <- INDUS_2560 %>% mutate(Sales_per_emp = D01/num_employ)

# 2565. D01/num_employ
INDUS_2565 <- INDUS_2565 %>% mutate(Sales_per_emp = D01/num_employ)

```


### Categorize number of workers (follow the same categorization as in year 2550)
1. 1
2. 2-3
3. 4-5
4. 6-10
5. 11-15
6. 16-20
7. 21-25
8. 26-30
9. 31-50
10. 51-100
11. 101-200
12. 201-500
13. 501-1000
14. > 1000



```{r}
## Categorized number of workers (2555)
INDUS_2555 <- INDUS_2555 %>% mutate(SIZE_R = case_when(num_employ == 1 ~ 1, num_employ %in% 2:3 ~ 2, num_employ %in% 4:5 ~ 3, num_employ %in% 6:10 ~ 4, num_employ %in% 11:15 ~ 5, num_employ %in% 16:20 ~ 6, num_employ %in% 21:25 ~ 7, num_employ %in% 26:30 ~ 8, num_employ %in% 31:50 ~ 9, num_employ %in% 51:100 ~ 10, num_employ %in% 101:200 ~ 11, num_employ %in% 201:500 ~ 12, num_employ %in% 501:1000 ~ 13, num_employ > 1000 ~ 14))

## Categorized number of workers (2560)
INDUS_2560 <- INDUS_2560 %>% mutate(SIZE_R = case_when(num_employ == 1 ~ 1, num_employ %in% 2:3 ~ 2, num_employ %in% 4:5 ~ 3, num_employ %in% 6:10 ~ 4, num_employ %in% 11:15 ~ 5, num_employ %in% 16:20 ~ 6, num_employ %in% 21:25 ~ 7, num_employ %in% 26:30 ~ 8, num_employ %in% 31:50 ~ 9, num_employ %in% 51:100 ~ 10, num_employ %in% 101:200 ~ 11, num_employ %in% 201:500 ~ 12, num_employ %in% 501:1000 ~ 13, num_employ > 1000 ~ 14))

## Categorized number of workers (2565)
INDUS_2565 <- INDUS_2565 %>% mutate(SIZE_R = case_when(num_employ == 1 ~ 1, num_employ %in% 2:3 ~ 2, num_employ %in% 4:5 ~ 3, num_employ %in% 6:10 ~ 4, num_employ %in% 11:15 ~ 5, num_employ %in% 16:20 ~ 6, num_employ %in% 21:25 ~ 7, num_employ %in% 26:30 ~ 8, num_employ %in% 31:50 ~ 9, num_employ %in% 51:100 ~ 10, num_employ %in% 101:200 ~ 11, num_employ %in% 201:500 ~ 12, num_employ %in% 501:1000 ~ 13, num_employ > 1000 ~ 14))

```



```{r}
## Convert SIZE_R to factor
INDUS_2550 <- INDUS_2550 %>% mutate(SIZE_R = factor(SIZE_R, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), labels = c("1", "2-3", "4-5", "6-10", "11-15", "16-20", "21-25", "26-30", "31-50", "51-100", "101-200", "201-500", "501-1000", ">1000")))

INDUS_2555 <- INDUS_2555 %>% mutate(SIZE_R = factor(SIZE_R, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), labels = c("1", "2-3", "4-5", "6-10", "11-15", "16-20", "21-25", "26-30", "31-50", "51-100", "101-200", "201-500", "501-1000", ">1000")))

INDUS_2560 <- INDUS_2560 %>% mutate(SIZE_R = factor(SIZE_R, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), labels = c("1", "2-3", "4-5", "6-10", "11-15", "16-20", "21-25", "26-30", "31-50", "51-100", "101-200", "201-500", "501-1000", ">1000")))

INDUS_2565 <- INDUS_2565 %>% mutate(SIZE_R = factor(SIZE_R, levels = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14), labels = c("1", "2-3", "4-5", "6-10", "11-15", "16-20", "21-25", "26-30", "31-50", "51-100", "101-200", "201-500", "501-1000", ">1000")))


```


### Trimming sample
Top and bottom 1% of value-added per worker or top and bottom 1% of K/L.


```{r}
### Trimming those with value-added per worker in bottom 1% and top 1% or top and bottom 1% of K/L.

## 2550
# Calculate the 1% and 99% quantiles of value-added per worker
q_2550 <- weighted.quantile(INDUS_2550$Value_Added_per_emp, probs = c(0.01, 0.99), weights = INDUS_2550$WGT_REG)

# Calculate the 1% and 99% quantiles of K/L
q_2550_KL <- weighted.quantile(INDUS_2550$Capital_to_Labor, probs = c(0.01, 0.99), weights = INDUS_2550$WGT_REG)

## 2555
# Calculate the 1% and 99% quantiles of value-added per worker
q_2555 <- weighted.quantile(INDUS_2555$Value_Added_per_emp, probs = c(0.01, 0.99), weights = INDUS_2555$WGT17)

# Calculate the 1% and 99% quantiles of K/L
q_2555_KL <- weighted.quantile(INDUS_2555$Capital_to_Labor, probs = c(0.01, 0.99), weights = INDUS_2555$WGT17)

## 2560
# Calculate the 1% and 99% quantiles of value-added per worker
q_2560 <- weighted.quantile(INDUS_2560$Value_Added_per_emp, probs = c(0.01, 0.99), weights = INDUS_2560$WGT)

# Calculate the 1% and 99% quantiles of K/L
q_2560_KL <- weighted.quantile(INDUS_2560$Capital_to_Labor, probs = c(0.01, 0.99), weights = INDUS_2560$WGT)

## 2565
# Calculate the 1% and 99% quantiles of value-added per worker
q_2565 <- weighted.quantile(INDUS_2565$Value_Added_per_emp, probs = c(0.01, 0.99), weights = INDUS_2565$WGT)

# Calculate the 1% and 99% quantiles of K/L
q_2565_KL <- weighted.quantile(INDUS_2565$Capital_to_Labor, probs = c(0.01, 0.99), weights = INDUS_2565$WGT)

```


```{r}
## Trim the sample (if satisfied either condition)
# 2550
INDUS_2550 <- INDUS_2550 %>% filter(!(Value_Added_per_emp < q_2550[1] | Value_Added_per_emp > q_2550[2] | Capital_to_Labor < q_2550_KL[1] | Capital_to_Labor > q_2550_KL[2]))

# 2555
INDUS_2555 <- INDUS_2555 %>% filter(!(Value_Added_per_emp < q_2555[1] | Value_Added_per_emp > q_2555[2] | Capital_to_Labor < q_2555_KL[1] | Capital_to_Labor > q_2555_KL[2]))

# 2560
INDUS_2560 <- INDUS_2560 %>% filter(!(Value_Added_per_emp < q_2560[1] | Value_Added_per_emp > q_2560[2] | Capital_to_Labor < q_2560_KL[1] | Capital_to_Labor > q_2560_KL[2]))

# 2565
INDUS_2565 <- INDUS_2565 %>% filter(!(Value_Added_per_emp < q_2565[1] | Value_Added_per_emp > q_2565[2] | Capital_to_Labor < q_2565_KL[1] | Capital_to_Labor > q_2565_KL[2]))

```

```{r}
### Examine the absurdly high number of workers
INDUS_2560 %>% filter(num_employ > 5000) %>% select(SIZE_R, num_employ, WGT)

```


## Tabulating the data
### Firm Size (by region)

```{r}
### Calculate the average number of workers by region
# 2550
Avg_emp_2550 <- INDUS_2550 %>% group_by(REG) %>% summarise(Avg_emp_50 = weighted.mean(num_employ, WGT_REG, na.rm = TRUE))

# 2555
Avg_emp_2555 <- INDUS_2555 %>% group_by(REG) %>% summarise(Avg_emp_55 = weighted.mean(num_employ, WGT17, na.rm = TRUE))

# 2560
Avg_emp_2560 <- INDUS_2560 %>% group_by(REG) %>% summarise(Avg_emp_60 = weighted.mean(num_employ, WGT, na.rm = TRUE))

# 2565
Avg_emp_2565 <- INDUS_2565 %>% group_by(REG) %>% summarise(Avg_emp_65 = weighted.mean(num_employ, WGT, na.rm = TRUE))

```

### Number of firms (by region)

```{r}
# 2550
Num_firms_2550 <- INDUS_2550 %>% group_by(REG) %>% summarise(Num_firms_50 = sum(WGT_REG, na.rm = TRUE))

# 2555
Num_firms_2555 <- INDUS_2555 %>% group_by(REG) %>% summarise(Num_firms_55 = sum(WGT17, na.rm = TRUE))

# 2560
Num_firms_2560 <- INDUS_2560 %>% group_by(REG) %>% summarise(Num_firms_60 = sum(WGT, na.rm = TRUE))

# 2565
Num_firms_2565 <- INDUS_2565 %>% group_by(REG) %>% summarise(Num_firms_65 = sum(WGT, na.rm = TRUE))
```


#### Compare with the labor force.

```{r}
### Join the three tables (Average number of workers, Number of firms, and labor force)
## 2549
Emp_Num_LF_2549 <- Avg_emp_2550 %>% left_join(Num_firms_2550, by = "REG")

# Join with the labor force
Emp_Num_LF_2549 <- Emp_Num_LF_2549 %>% left_join(LFS_LF %>% filter(Year == 2549), by = c("REG" = "reg"))

# Divide the labor force by 10,000
Emp_Num_LF_2549 <- Emp_Num_LF_2549 %>% mutate(wgt = wgt/10000)

#Rename the columns
Emp_Num_LF_2549 <- Emp_Num_LF_2549 %>% rename(Avg_emp = Avg_emp_50, Num_firms = Num_firms_50, Labor_Force = wgt)


## 2554
Emp_Num_LF_2554 <- Avg_emp_2555 %>% left_join(Num_firms_2555, by = "REG")

# Join with the labor force
Emp_Num_LF_2554 <- Emp_Num_LF_2554 %>% left_join(LFS_LF %>% filter(Year == 2554), by = c("REG" = "reg"))

# Divide the labor force by 10,000
Emp_Num_LF_2554 <- Emp_Num_LF_2554 %>% mutate(wgt = wgt/10000)

#Rename the columns
Emp_Num_LF_2554 <- Emp_Num_LF_2554 %>% rename(Avg_emp = Avg_emp_55, Num_firms = Num_firms_55, Labor_Force = wgt)


## 2559
Emp_Num_LF_2559 <- Avg_emp_2560 %>% left_join(Num_firms_2560, by = "REG")

# Join with the labor force
Emp_Num_LF_2559 <- Emp_Num_LF_2559 %>% left_join(LFS_LF %>% filter(Year == 2559), by = c("REG" = "reg"))

#Rename the columns
Emp_Num_LF_2559 <- Emp_Num_LF_2559 %>% rename(Avg_emp = Avg_emp_60, Num_firms = Num_firms_60, Labor_Force = wgt)


## 2564
Emp_Num_LF_2564 <- Avg_emp_2565 %>% left_join(Num_firms_2565, by = "REG")

# Join with the labor force
Emp_Num_LF_2564 <- Emp_Num_LF_2564 %>% left_join(LFS_LF %>% filter(Year == 2564), by = c("REG" = "reg"))

#Rename the columns
Emp_Num_LF_2564 <- Emp_Num_LF_2564 %>% rename(Avg_emp = Avg_emp_65, Num_firms = Num_firms_65, Labor_Force = wgt)

```


```{r}
## Concatenate the four tables
Emp_Num_LF <- rbind(Emp_Num_LF_2549, Emp_Num_LF_2554, Emp_Num_LF_2559, Emp_Num_LF_2564)

## Convert year to C.E.
Emp_Num_LF$Year <- Emp_Num_LF$Year - 543

### Make another dataframe where the number of firms is divided by 10,000 and the labor force is divided by 1,000,000
Emp_Num_LF_scaled <- Emp_Num_LF %>% mutate(Num_firms = Num_firms/10000, Labor_Force = Labor_Force/1000000)

```


### K/L

```{r}
### Calculate average K/L by region.
# 2550
Capital_to_Labor_2550 <- INDUS_2550 %>% group_by(REG) %>% summarise(Avg_Capital_to_Labor = weighted.mean(Capital_to_Labor, WGT_REG, na.rm = TRUE))

# 2555
Capital_to_Labor_2555 <- INDUS_2555 %>% group_by(REG) %>% summarise(Avg_Capital_to_Labor = weighted.mean(Capital_to_Labor, WGT17, na.rm = TRUE))

# 2560
Capital_to_Labor_2560 <- INDUS_2560 %>% group_by(REG) %>% summarise(Avg_Capital_to_Labor = weighted.mean(Capital_to_Labor, WGT, na.rm = TRUE))

# 2565
Capital_to_Labor_2565 <- INDUS_2565 %>% group_by(REG) %>% summarise(Avg_Capital_to_Labor = weighted.mean(Capital_to_Labor, WGT, na.rm = TRUE))

```

### Value-added per worker

```{r}
### Calculate average value-added per worker by region.
# 2550
Value_Added_per_emp_2550 <- INDUS_2550 %>% group_by(REG) %>% summarise(Avg_Value_Added_per_emp = weighted.mean(Value_Added_per_emp, WGT_REG, na.rm = TRUE))

# 2555
Value_Added_per_emp_2555 <- INDUS_2555 %>% group_by(REG) %>% summarise(Avg_Value_Added_per_emp = weighted.mean(Value_Added_per_emp, WGT17, na.rm = TRUE))

# 2560
Value_Added_per_emp_2560 <- INDUS_2560 %>% group_by(REG) %>% summarise(Avg_Value_Added_per_emp = weighted.mean(Value_Added_per_emp, WGT, na.rm = TRUE))

# 2565
Value_Added_per_emp_2565 <- INDUS_2565 %>% group_by(REG) %>% summarise(Avg_Value_Added_per_emp = weighted.mean(Value_Added_per_emp, WGT, na.rm = TRUE))
```


### Sales per worker

```{r}
### Calculate average sales per worker by region.
# 2550
Sales_per_emp_2550 <- INDUS_2550 %>% group_by(REG) %>% summarise(Avg_Sales_per_emp = weighted.mean(Sales_per_emp, WGT_REG, na.rm = TRUE))

# 2555
Sales_per_emp_2555 <- INDUS_2555 %>% group_by(REG) %>% summarise(Avg_Sales_per_emp = weighted.mean(Sales_per_emp, WGT17, na.rm = TRUE))

# 2560
Sales_per_emp_2560 <- INDUS_2560 %>% group_by(REG) %>% summarise(Avg_Sales_per_emp = weighted.mean(Sales_per_emp, WGT, na.rm = TRUE))

# 2565
Sales_per_emp_2565 <- INDUS_2565 %>% group_by(REG) %>% summarise(Avg_Sales_per_emp = weighted.mean(Sales_per_emp, WGT, na.rm = TRUE))
```


### R&D expense

```{r}
### Calculate the proportion of firms with R&D expense above 0 in each region.
# 2550
RD_2550 <- INDUS_2550 %>% group_by(REG, RD_above_0) %>% summarise(Num_firms = sum(WGT_REG, na.rm = TRUE)) %>% mutate(Prop = Num_firms*100/sum(Num_firms))

# 2555
RD_2555 <- INDUS_2555 %>% group_by(REG, RD_above_0) %>% summarise(Num_firms = sum(WGT17, na.rm = TRUE)) %>% mutate(Prop = Num_firms*100/sum(Num_firms))

# 2560
RD_2560 <- INDUS_2560 %>% group_by(REG, RD_above_0) %>% summarise(Num_firms = sum(WGT, na.rm = TRUE)) %>% mutate(Prop = Num_firms*100/sum(Num_firms))

# 2565
RD_2565 <- INDUS_2565 %>% group_by(REG, RD_above_0) %>% summarise(Num_firms = sum(WGT, na.rm = TRUE)) %>% mutate(Prop = Num_firms*100/sum(Num_firms))

```



## Combine to make two main tables.
### Number of firms, average number of workers, and labor force

```{r}
# Change region to actual names
Emp_Num_LF_scaled <- Emp_Num_LF_scaled %>% mutate(REG = case_when(REG == "1" ~ "Bangkok", REG == "2" ~ "Central", REG == "3" ~ "North", REG == "4" ~ "Northeast", REG == "5" ~ "South"))

```

```{r}
## Let's try creating the table with gt.
Emp_Num_LF_scaled %>% gt(rowname_col = "REG", groupname_col = "Year") %>% cols_label(Avg_emp = "Average number of workers", Num_firms = "Number of firms (10,000)", Labor_Force = "Labor force (millions)") %>% cols_align(align = "center") %>% cols_width(everything() ~ px(160)) %>% fmt_number(decimals = 2)
  

```


### K/L and Value-added per worker and Sales per worker


```{r}
### Combine K/L of all years
# First, add year to the tables
Capital_to_Labor_2550 <- Capital_to_Labor_2550 %>% mutate(Year = 2006)
Capital_to_Labor_2555 <- Capital_to_Labor_2555 %>% mutate(Year = 2011)
Capital_to_Labor_2560 <- Capital_to_Labor_2560 %>% mutate(Year = 2016)
Capital_to_Labor_2565 <- Capital_to_Labor_2565 %>% mutate(Year = 2021)

# Concatenate the four tables
Capital_to_Labor <- rbind(Capital_to_Labor_2550, Capital_to_Labor_2555, Capital_to_Labor_2560, Capital_to_Labor_2565)

```

```{r}
### Combine value-added per worker of four years
# First, add year to the tables
Value_Added_per_emp_2550 <- Value_Added_per_emp_2550 %>% mutate(Year = 2006)
Value_Added_per_emp_2555 <- Value_Added_per_emp_2555 %>% mutate(Year = 2011)
Value_Added_per_emp_2560 <- Value_Added_per_emp_2560 %>% mutate(Year = 2016)
Value_Added_per_emp_2565 <- Value_Added_per_emp_2565 %>% mutate(Year = 2021)

# Concatenate the four tables
Value_Added_per_emp <- rbind(Value_Added_per_emp_2550, Value_Added_per_emp_2555, Value_Added_per_emp_2560, Value_Added_per_emp_2565)

```

```{r}
### Combine sales per worker of four years
# First, add year to the tables
Sales_per_emp_2550 <- Sales_per_emp_2550 %>% mutate(Year = 2006)
Sales_per_emp_2555 <- Sales_per_emp_2555 %>% mutate(Year = 2011)
Sales_per_emp_2560 <- Sales_per_emp_2560 %>% mutate(Year = 2016)
Sales_per_emp_2565 <- Sales_per_emp_2565 %>% mutate(Year = 2021)

# Concatenate the four tables
Sales_per_emp <- rbind(Sales_per_emp_2550, Sales_per_emp_2555, Sales_per_emp_2560, Sales_per_emp_2565)

```


```{r}
## Combine the three tables
KLVAPerEmp <- Capital_to_Labor %>% left_join(Value_Added_per_emp, by = c("REG", "Year"))

KLVAPerEmp <- KLVAPerEmp %>% left_join(Sales_per_emp, by = c("REG", "Year"))

```


```{r}
### Make nice table 
# Change region to actual names
KLVAPerEmp <- KLVAPerEmp %>% mutate(REG = case_when(REG == "1" ~ "Bangkok", REG == "2" ~ "Central", REG == "3" ~ "North", REG == "4" ~ "Northeast", REG == "5" ~ "South"))
```


```{r}
## Let's try creating the table with gt.
KLVAPerEmp %>% gt(rowname_col = "REG", groupname_col = "Year") %>% cols_label(Avg_Capital_to_Labor = "Average K/L", Avg_Value_Added_per_emp = "Average Value-added per worker", Avg_Sales_per_emp = "Average Sales per worker") %>% cols_align(align = "center") %>% cols_width(everything() ~ px(160)) %>% fmt_number(decimals = 0)
  

```


## Plotting the data

```{r}
## Make a region labeller.
region_labeller <- as_labeller(c( "0" = "National",
  "1" = "Bangkok",
  "2" = "Central",
  "3" = "North",
  "4" = "Northeast",
  "5" = "South"
))
```


### Distribution of Firm Size (by region)

```{r}
# 2550
ggplot(INDUS_2550 %>% drop_na(SIZE_R)) + aes(x = SIZE_R, weight = WGT_REG, y = after_stat(prop)) + geom_bar(stat = "prop") + facet_rep_wrap(~REG, labeller = region_labeller, ncol = 1) + labs(title = "Distribution of Firm Size (by region)", x = "Number of workers", y = "Proportion")
```


```{r}

# 2560
ggplot(INDUS_2560 %>% drop_na(SIZE_R)) + aes(x = SIZE_R, weight = WGT, y = after_stat(prop)) + geom_bar(stat = "prop") + facet_rep_wrap(~REG, labeller = region_labeller, ncol = 1) + labs(title = "Distribution of Firm Size (by region)", x = "Number of workers", y = "Proportion")


```

```{r}

# 2565
ggplot(INDUS_2565 %>% drop_na(SIZE_R)) + aes(x = SIZE_R, weight = WGT, y = after_stat(prop)) + geom_bar(stat = "prop") + facet_rep_wrap(~REG, labeller = region_labeller, ncol = 1) + labs(title = "Distribution of Firm Size (by region)", x = "Number of workers", y = "Proportion")
```


```{r}
## Overlay the two graphs
Dist_overlay <- ggplot(NULL, aes(x = SIZE_R, y = after_stat(prop))) + geom_bar(data = INDUS_2550 %>% drop_na(SIZE_R), aes(weight = WGT_REG, fill = "2006"), stat = "prop", alpha = 0.4) + geom_bar(data = INDUS_2565 %>% drop_na(SIZE_R), aes(weight = WGT, fill = "2021"), stat = "prop", alpha = 0.4) + facet_rep_wrap(~REG, labeller = region_labeller, ncol = 1) + labs(title = "Distribution of Firm Size (by region)", x = "Number of workers", y = "Proportion") + labs(fill = "Year") + theme(legend.position = "bottom")


Dist_overlay


```

### Number of firms, average number of workers, and labor force (by region)

```{r}
### Grouped bar chart. Each region is a facet.
# Make year as discrete
Emp_Num_LF_scaled$Year <- as.factor(Emp_Num_LF_scaled$Year)

## Convert the data to long format
Emp_Num_LF_long <- Emp_Num_LF_scaled %>% pivot_longer(cols = c("Avg_emp", "Num_firms", "Labor_Force"), names_to = "Variable", values_to = "Value")

# Order in each group.
Emp_Num_LF_long$Variable <- factor(Emp_Num_LF_long$Variable, levels = c("Avg_emp", "Num_firms", "Labor_Force"))


# Plot
ggplot(Emp_Num_LF_long) + aes(x = Year, y = Value, fill = Variable) + geom_col(position = "dodge") + facet_wrap(~REG, ncol = 2) + labs(title = "Number of firms, average number of workers, and labor force (by region)", x = "Year", y = "Value") + theme(legend.position = "bottom") + scale_fill_manual(values = c("blue", "red", "green"), labels = c("Average number of workers", "Number of firms (10,000)", "Labor force (millions)")) + theme(legend.position = "bottom", legend.title = element_blank())


```


### Distribution of value-added per worker (by region)

```{r}
# 2550
# Make REG as character
INDUS_2550$REG <- as.character(INDUS_2550$REG)

# Make ln(Value_Added_per_emp)
INDUS_2550 <- INDUS_2550 %>% mutate(ln_Value_Added_per_emp = log(Value_Added_per_emp))

# Plot
ggplot(INDUS_2550, aes(x = ln_Value_Added_per_emp, weight = WGT_REG,  group = REG, color = REG)) + geom_density(warnWbw = FALSE) + labs(title = "Distribution of value-added per worker (by region) in 2006", x = "ln(Value-added per worker)", y = "Density") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange"), labels = c( "Bangkok", "Central", "North", "Northeast", "South")) + theme(legend.position = "bottom", legend.title = element_blank())

```

```{r}
# 2565
# Make REG as character
INDUS_2565$REG <- as.character(INDUS_2565$REG)

# Make ln(Value_Added_per_emp)
INDUS_2565 <- INDUS_2565 %>% mutate(ln_Value_Added_per_emp = log(Value_Added_per_emp))

# Plot
ggplot(INDUS_2565, aes(x = ln_Value_Added_per_emp, weight = WGT,  group = REG, color = REG)) + geom_density(warnWbw = FALSE) + labs(title = "Distribution of value-added per worker (by region) in 2021", x = "ln(Value-added per worker)", y = "Density") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange"), labels = c( "Bangkok", "Central", "North", "Northeast", "South")) + theme(legend.position = "bottom", legend.title = element_blank())

```

### Distribution of K/L (by region)

```{r}
# 2550
# Make REG as character
INDUS_2550$REG <- as.character(INDUS_2550$REG)

# Make ln(Capital_to_Labor)
INDUS_2550 <- INDUS_2550 %>% mutate(ln_Capital_to_Labor = log(Capital_to_Labor))

# Plot
ggplot(INDUS_2550, aes(x = ln_Capital_to_Labor, weight = WGT_REG,  group = REG, color = REG)) + geom_density(warnWbw = FALSE) + labs(title = "Distribution of K/L (by region) in 2006", x = "ln(K/L)", y = "Density") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange"), labels = c( "Bangkok", "Central", "North", "Northeast", "South")) + theme(legend.position = "bottom", legend.title = element_blank())

```



```{r}
# 2565
# Make REG as character
INDUS_2565$REG <- as.character(INDUS_2565$REG)

# Make ln(Capital_to_Labor)
INDUS_2565 <- INDUS_2565 %>% mutate(ln_Capital_to_Labor = log(Capital_to_Labor))

# Plot
ggplot(INDUS_2565, aes(x = ln_Capital_to_Labor, weight = WGT,  group = REG, color = REG)) + geom_density(warnWbw = FALSE) + labs(title = "Distribution of K/L (by region) in 2021", x = "ln(K/L)", y = "Density") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange"), labels = c( "Bangkok", "Central", "North", "Northeast", "South")) + theme(legend.position = "bottom", legend.title = element_blank())

```


### Mean K/L, Mean Value-added per worker, and Mean Sales per worker (by region)

```{r}
### Plot K/L
K_LL_plot <- ggplot(KLVAPerEmp, aes(x= Year, y = Avg_Capital_to_Labor)) + geom_line(aes(color = REG, group = REG)) + labs(x = "Year", y = "Average K/L (THB)") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange")) + theme(legend.position = "bottom", legend.title = element_blank()) + scale_y_continuous(labels = scales::comma) + scale_x_continuous(breaks = c(2006, 2011, 2016, 2021))

K_LL_plot
```

```{r}
### Plot Value-added per worker
VA_plot <- ggplot(KLVAPerEmp, aes(x= Year, y = Avg_Value_Added_per_emp)) + geom_line(aes(color = REG, group = REG)) + labs(x = "Year", y = "Average Value-added per worker (THB)") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange")) + theme(legend.position = "bottom", legend.title = element_blank()) + scale_y_continuous(labels = scales::comma) + scale_x_continuous(breaks = c(2006, 2011, 2016, 2021))

VA_plot
```


```{r}
### Plot Sales per worker
Sales_plot <- ggplot(KLVAPerEmp, aes(x= Year, y = Avg_Sales_per_emp)) + geom_line(aes(color = REG, group = REG)) + labs(x = "Year", y = "Average Sales per worker (THB)") + theme(legend.position = "bottom") + scale_color_manual(values = c("red", "blue", "green", "purple", "orange")) + theme(legend.position = "bottom", legend.title = element_blank()) + scale_y_continuous(labels = scales::comma) + scale_x_continuous(breaks = c(2006, 2011, 2016, 2021))

Sales_plot
```


```{r}
## Combine the two plots
K_LL_plot + VA_plot + plot_annotation(title = "Mean K/L and Mean Value-added per worker (by region)") + plot_layout(guides = "collect") & theme(legend.position = 'bottom')

```


```{r}
## Combine the three plots
(K_LL_plot | VA_plot) / 
  Sales_plot + plot_annotation(title = "Mean K/L, Mean Value-added per worker, and Mean Sales per worker (by region)") + plot_layout(guides = "collect") & theme(legend.position = 'bottom')


```

## Correlating stuff with the size of firms (scatter plot)

```{r}
### Plot weighted mean of number of workers in each sales bin. 

## Create a dataframe with the weighted mean of number of workers in each sales bin.

# 2565
# First, have to bin sales (D01). Want 25 bins.
INDUS_2565 <- INDUS_2565 %>% mutate(Sales_bin = cut(D01, breaks = 25, labels = FALSE))

# Calculate the weighted mean of number of workers in each sales bin.
Num_emp_and_sales_bin <- INDUS_2565 %>% group_by(Sales_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
Sales_and_num_work_plot_raw <- ggplot(Num_emp_and_sales_bin, aes(x = Sales_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each sales bin (equal width bins)", x = "Sales bin", y = "Average number of workers")

Sales_and_num_work_plot_raw
```

```{r}
### Plot weighted mean of number of workers in each sales bin. 

## Create a dataframe with the weighted mean of number of workers in each sales bin.

# 2565
# First, have to bin sales (D01). Want 25 bins. Use equal frequency binning.

INDUS_2565 <- INDUS_2565 %>% mutate(Sales_bin = weighted_ntile(D01, n = 25, weights = WGT))

# Calculate the weighted mean of number of workers in each sales bin.
Num_emp_and_sales_bin <- INDUS_2565 %>% group_by(Sales_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
Sales_and_num_work_plot_eq_freq <- ggplot(Num_emp_and_sales_bin, aes(x = Sales_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each sales bin (equal frequency bins)", x = "Sales bin", y = "Average number of workers")

Sales_and_num_work_plot_eq_freq

```
```{r}
# Plot
Sales_and_num_work_plot_eq_freq_cut <- ggplot(Num_emp_and_sales_bin, aes(x = Sales_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each sales bin (equal frequency bins)", x = "Sales bin", y = "Average number of workers") + ylim(0, 30)

Sales_and_num_work_plot_eq_freq_cut
```


```{r}
### Scatter plot between ln(K/L) and number of workers
# 2565
ggplot(INDUS_2565) + aes(x = ln_Capital_to_Labor, y = num_employ) + geom_point(alpha = 0.3) + ylim(0, 1500)

```

```{r}
### Plot weighted mean of number of workers in each K/L bin.

## Create a dataframe with the weighted mean of number of workers in each K/L bin.

# 2565
# First, have to bin K/L. Want 25 bins.

INDUS_2565 <- INDUS_2565 %>% mutate(KL_bin = cut(Capital_to_Labor, breaks = 25, labels = FALSE))

# Calculate the weighted mean of number of workers in each K/L bin.
Num_emp_and_KL_bin <- INDUS_2565 %>% group_by(KL_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
KL_and_num_work_plot_raw <- ggplot(Num_emp_and_KL_bin, aes(x = KL_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each K/L bin (equal width bins)", x = "K/L bin", y = "Average number of workers") 

KL_and_num_work_plot_raw

```

```{r}
### Plot weighted mean of number of workers in each K bin.

## Create a dataframe with the weighted mean of number of workers in each K bin.

# 2565
# First, have to bin K. Want 25 bins.

INDUS_2565 <- INDUS_2565 %>% mutate(K_bin = cut(E08, breaks = 25, labels = FALSE))

# Calculate the weighted mean of number of workers in each K bin.
Num_emp_and_K_bin <- INDUS_2565 %>% group_by(K_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
K_and_num_work_plot_raw <- ggplot(Num_emp_and_K_bin, aes(x = K_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each K bin (equal width bins)", x = "K bin", y = "Average number of workers")

K_and_num_work_plot_raw

```

```{r}
### Plot weighted mean of number of workers in each K bin. But limit y-axis to 10000.

K_and_num_work_plot_cut <- ggplot(Num_emp_and_K_bin, aes(x = K_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each K bin (equal width bins)", x = "K bin", y = "Average number of workers") + ylim(0, 10000)

K_and_num_work_plot_cut
```

```{r}
### Plot weighted mean of number of workers in each K bin.

## Create a dataframe with the weighted mean of number of workers in each K bin.

# 2565
# First, have to bin K. Want 25 bins. Using equal-frequency binning.

INDUS_2565 <- INDUS_2565 %>% mutate(K_bin = weighted_ntile(E08, n = 25, weights = WGT))

# Calculate the weighted mean of number of workers in each K bin.
Num_emp_and_K_bin <- INDUS_2565 %>% group_by(K_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
K_and_num_work_plot_eq_freq <- ggplot(Num_emp_and_K_bin, aes(x = K_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each K bin (equal frequency bins)", x = "K bin", y = "Average number of workers")

K_and_num_work_plot_eq_freq

```

```{r}
### Plot weighted mean of number of workers in each K bin. But limit y-axis to 30.

K_and_num_work_plot_eq_freq_cut <- ggplot(Num_emp_and_K_bin, aes(x = K_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each K bin (equal frequency bins)", x = "K bin", y = "Average number of workers") + ylim(0, 30)

K_and_num_work_plot_eq_freq_cut

```


```{r}
### Scatter plot between ln(Value-added per worker) and number of workers
# 2565
ggplot(INDUS_2565) + aes(x = ln_Value_Added_per_emp, y = num_employ) + geom_point(alpha = 0.3) + ylim(0, 1500)

```


```{r}
### Plot weighted mean of number of workers in each value-added bin.

## Create a dataframe with the weighted mean of number of workers in each value-added bin.

# 2565
# First, have to bin value-added per worker. Want 25 bins.
INDUS_2565 <- INDUS_2565 %>% mutate(VA_bin = cut(Value_Added_per_emp, breaks = 25, labels = FALSE))

# Calculate the weighted mean of number of workers in each value-added bin.
Num_emp_and_VA_bin <- INDUS_2565 %>% group_by(VA_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
VA_and_num_work_plot_raw <- ggplot(Num_emp_and_VA_bin, aes(x = VA_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each value-added per worker bin (equal width bins)", x = "Value-added per worker bin", y = "Average number of workers")

VA_and_num_work_plot_raw
```

```{r}
### Plot weighted mean of number of workers in each value-added bin.

## Create a dataframe with the weighted mean of number of workers in each value-added bin.

# 2565
# First, have to bin value-added per worker. Want 25 bins. Using equal-frequency binning.

INDUS_2565 <- INDUS_2565 %>% mutate(VA_bin = weighted_ntile(Value_Added_per_emp, n = 25, weights = WGT))

# Calculate the weighted mean of number of workers in each value-added bin.
Num_emp_and_VA_bin <- INDUS_2565 %>% group_by(VA_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
VA_and_num_work_plot_raw <- ggplot(Num_emp_and_VA_bin, aes(x = VA_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each value-added per worker bin (equal frequency bins)", x = "Value-added per worker bin", y = "Average number of workers")

VA_and_num_work_plot_raw

```

```{r}
### Plot weighted mean of number of workers in each sales per worker bin.

## Create a dataframe with the weighted mean of number of workers in each sales per worker bin.

# 2565
# First, have to bin sales per worker. Want 25 bins.
INDUS_2565 <- INDUS_2565 %>% mutate(Sales_per_emp_bin = cut(Sales_per_emp, breaks = 25, labels = FALSE))

# Calculate the weighted mean of number of workers in each sales per worker bin.
Num_emp_and_Sales_per_emp_bin <- INDUS_2565 %>% group_by(Sales_per_emp_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
Sales_per_emp_and_num_work_plot_raw <- ggplot(Num_emp_and_Sales_per_emp_bin, aes(x = Sales_per_emp_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each sales per worker bin (equal width bins)", x = "Sales per worker bin", y = "Average number of workers")

Sales_per_emp_and_num_work_plot_raw
```

```{r}
### Plot weighted mean of number of workers in each sales per worker bin.

## Create a dataframe with the weighted mean of number of workers in each sales per worker bin.

# 2565
# First, have to bin sales per worker. Want 25 bins. Using equal-frequency binning.

INDUS_2565 <- INDUS_2565 %>% mutate(Sales_per_emp_bin = weighted_ntile(Sales_per_emp, n = 25, weights = WGT))

# Calculate the weighted mean of number of workers in each sales per worker bin.
Num_emp_and_Sales_per_emp_bin <- INDUS_2565 %>% group_by(Sales_per_emp_bin) %>% summarise(Avg_num_emp = weighted.mean(num_employ, WGT, na.rm = TRUE))

# Plot
Sales_per_emp_and_num_work_plot_eq_freq <- ggplot(Num_emp_and_Sales_per_emp_bin, aes(x = Sales_per_emp_bin, y = Avg_num_emp)) + geom_point() + labs(title = "Mean of number of workers in each sales per worker bin (equal frequency bins)", x = "Sales per worker bin", y = "Average number of workers")

Sales_per_emp_and_num_work_plot_eq_freq

```


```{r}
### Correlation between K/L and number of workers
# weighted correlation
# 2565

cor.test(INDUS_2565$Capital_to_Labor, INDUS_2565$num_employ, method = "pearson", weights = INDUS_2565$WGT)

```
```{r}
### Correlation between value-added per worker and number of workers
# weighted correlation
# 2565

cor.test(INDUS_2565$Value_Added_per_emp, INDUS_2565$num_employ, method = "pearson", weights = INDUS_2565$WGT)

```
